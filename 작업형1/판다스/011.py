# 핕터링
import pandas as pd

df = pd.read_csv("./cafe2.csv")
# print(df)

# 1. 1개 조건 필터링 ------------------------------------
diet = df["칼로리"] < 50
# print(diet) # boolean값 출력

# print(df[diet]) # true인 행만 필터링 되어 출력됨
#       메뉴    가격   칼로리   원산지
# 0  아메리카노  4500  10.0  콜롬비아

# 2. NOT 연산자 ------------------------------------
# True(1)을 False(0)으로, 그 반대로 변경

# print(df[~diet])
#       메뉴    가격    칼로리   원산지
# 1   카페라떼  5000  110.0   NaN
# 2   카페모카  5500  250.0  과테말라
# 3   카푸치노  5000  110.0  과테말라
# 4  오늘의커피  3500    NaN   NaN

# 3. 복수 조건 필터링 ------------------------------------
    # - 합집합(AND) : &, 두 조건이 모두 참이면 True
    # - 교집합(OR) : |, 두 조건 중 하나 이상이 참이면 True

cond1 = df["가격"] > 5000
cond2 = df["칼로리"] > 100

# print(df[cond1 & cond2]) # 5000원 이상이면서 칼로리가 100보다 큰 데이터 필터링
#      메뉴    가격    칼로리   원산지
# 2  카페모카  5500  250.0  과테말라

# print(df[cond1 | cond2]) # 5000원 이상이거나 칼로리가 100보다 큰 데이터 필터링
#      메뉴    가격    칼로리   원산지
# 1  카페라떼  5000  110.0   NaN
# 2  카페모카  5500  250.0  과테말라
# 3  카푸치노  5000  110.0  과테말라

cond3 = (df["원산지"] == "과테말라") # 원산지가 과테말라인것만 필터링
# print(df[cond3])
#      메뉴    가격    칼로리   원산지
# 2  카페모카  5500  250.0  과테말라
# 3  카푸치노  5000  110.0  과테말라

# 4. isin()을 활용한 필터링 ------------------------------------
    # 주어진 값이 있으면 True, 없으면 False
    # 주어진 값과의 완전한 일치를 검사, 뛰어쓰기도 =>  라떼로 카페라떼를 찾을 수 없음

# print(df["메뉴"].isin(["아메리카노"]))

cond4 = df["메뉴"].isin(["아메리카노"])
# print(df[cond4])
#       메뉴    가격   칼로리   원산지
# 0  아메리카노  4500  10.0  콜롬비아

box = ["아메리카노", "카페라떼", "오늘의커피"]
cond5 = df["메뉴"].isin(box)

# print(df[cond5])
#       메뉴    가격    칼로리   원산지
# 0  아메리카노  4500   10.0  콜롬비아
# 1   카페라떼  5000  110.0   NaN
# 4  오늘의커피  3500    NaN   NaN